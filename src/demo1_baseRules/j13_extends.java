package demo1_baseRules;

public class j13_extends {
    // 继承是为了提高代码复用性和维护性，修改父类一处即可，把多个类相同的属性和方法集成到一个类（父类）中。但是提高了类之间的耦合性。

    // 对于调用构造方法问题:this() -- 创建对象同时初始化成员变量同时调用本类构造方法；super() -- 创建对象同时初始化成员变量同时调用父类构造方法
    // 对于同名成员变量以及同名成员方法问题:接调用变量是使用本方法中的变量，this前缀是调用本类中的变量，super前缀是调用父类中的变量

    // 对于继承中创建子类时调用构造方法问题:
    // 因为子类会继承父类中的数据，可能会使用到父类的数据，所以子类初始化之前必须先完成父类数据的初始化。
    // 每一个子类构造方法的第一条语句默认都是super()--所以会先执行父类构造方法，调用的是父类无参构造方法，如果父类只有有参构造方法就会报错。以下是解决方法：
    // 1.通过使用super(参数)去调用父类有参构造方法（super(参数)会覆盖掉super()）
    // (推荐)2.到父类里面自己写一个无参构造方法，就可以让子类默认使用super()不报错了。

    // 对于子类中调用成员方法问题:是先调用子类本身的成员方法


    // 对于方法重写问题:需要重写的方法不能使用static和private修饰，使用@Override显示说明这是重写方法，子类中方法重写会覆盖掉父类中的方法，也可以使用super.方法()来调用父类中被重写的方法。
    // 方法重写和方法重载不一样，前者是覆盖，后者是一个方法名多用



}
