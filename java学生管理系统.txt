习题：
用面向对象思想设计一个学生成绩管理的项目。
学习下面的程序，参考上面的案例，把数组改写成ArrayList去实现各项功能。

程序如下：
import java.util.*;
public class test.MainClass {//主程序
	public static void main(String[] args){
		Scanner in=new Scanner(System.in);
		System.out.println("--请定义人数--");
		test.Student[] stuArr=new test.Student[in.nextInt()];
		test.AdminStu admin=new test.AdminStu();
		while(true){
			System.out.println("--你要执行的功能:--");
			System.out.println("0:添加一个学生");
			System.out.println("1:查找一个学生");
			System.out.println("2:根据编号更新学生的基本信息");
			System.out.println("3:根据编号删除学生--");
			System.out.println("4:根据编号输入学生的各门成绩");
			System.out.println("5:根据某门成绩进行排序");
			System.out.println("6:根据总分进行排序");
			System.out.println("9:退出系统");
			int number=in.nextInt();
			if(number==0){
				System.out.println("请输入学生的姓名：");
				String name=in.next();
				System.out.println("请输入学生的年龄:");
				int age=in.nextInt();
				admin.add(name,age,stuArr);//添加学生
				
			}
			else if(number==1){
				System.out.println("执行查找学生的基本信息操作");
				System.out.println("请输入学生的编号进行查找:");
				int no=in.nextInt();
				admin.find(no,stuArr);
			}else if(number==2){
				System.out.println("执行更新学员的基本信息");
				System.out.println("请输入学生的编号：");
				int no=in.nextInt();
				System.out.println("请输入学生的姓名：");
				String name=in.next();
				System.out.println("请输入学生的年龄:");
				int age=in.nextInt();
				admin.update(no, name, age, stuArr);
			}else if(number==3){
				System.out.println("执行删除操作");
				System.out.println("请输入学生的编号:");
				int no=in.nextInt();
				admin.delete(no,stuArr);
			}else if(number==4){
				System.out.println("执行输入成绩操作");
				System.out.println("请输入学生的编号:");
				int no=in.nextInt();
				admin.input(no,stuArr);
			}else if(number==5){
				System.out.println("执行根据某科成绩排序操作");
				System.out.println("请确定课程:1.java 2.C 3.sql");
				int num=in.nextInt();
				admin.couSort(num, stuArr);
			}else if(number==6){
				System.out.println("执行根据总分排序操作");
				admin.sumSort(stuArr);
			}else if(number==9){
				System.out.println("程序结束");
				System.exit(0);
			}
		
			}
		
		
	} 
	
}

public class test.Student {//学生类
	private int no;
	private String name;
	private int age;
	private int java;
	private int c;
	private int sql;
	private int sum;
	private int avg;
	
	public void setNo(int no){
		this.no=no;
	}
	public int getNo(){
		return this.no;
	}
	public String getName() {
		return this.name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return this.age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public int getJava() {
		return java;
	}
	public void setJava(int java) {
		this.java = java;
	}
	public int getC() {
		return c;
	}
	public void setC(int c) {
		this.c = c;
	}
	public int getSql() {
		return sql;
	}
	public void setSql(int sql) {
		this.sql = sql;
	}
	public int getSum() {
		return sum;
	}
	public void setSum() {
		this.sum=this.java+this.c+this.sql;
	}
	public int getAvg() {
		return avg;
	}
	public void setAvg() {
		this.avg =this.sum/3;
	}
	public String toString(){
		String msg="\t"+this.no+"\t"+this.name+"\t"+this.age+"\t"+this.java+"\t"
		+this.c+"\t"+this.sql+"\t"+this.sum+"\t"+this.avg;
		return msg;
	}
}


再新建一个管理学生的类

import java.util.*;
public class test.AdminStu {//用来管理学生的一个类
	String msg="\t编号\t姓名\t年龄\tjava\tC\tSQL\t总分\t平均分";
	public void print(test.Student[] arr){//用来刷新数据的
		System.out.println(msg);
		for(int i=0;i<arr.length;i++){
			if(arr[i]!=null){
				arr[i].setSum();
				arr[i].setAvg();
				System.out.println(arr[i]);
			}
		}
	}

	public boolean exist(int no,test.Student stu){//判断学生是否存在
		if(stu!=null){
			if(stu.getNo()==no){
				return true;
			}else{
				return false;
			}
		}
		return false;
	}

	public void add(String name,int age,test.Student[] arr){//添加学生的方法
		test.Student stu=new test.Student();
		stu.setName(name);
		stu.setAge(age);
		int i=this.setIndex(arr);
		stu.setNo(i);
		if(i==99999){
			System.out.println("学生人数达到最大，不能再添加了");
		}else{
			arr[i]=stu;
		}
		this.print(arr);
	}
	
	public int setIndex(test.Student[] arr){//返回数组里面为空的下标
		for(int i=0;i<arr.length;i++){
			if(arr[i]==null){
				return i;
			}
		}
		return 99999;
	}

	public void find(int no,test.Student[] arr){//查询方法
		System.out.println(msg);
		for(int i=0;i<arr.length;i++){
			if(this.exist(no,arr[i])){
				System.out.println(arr[i]);
				return;
			}
		}
		System.out.println("--没有这个学生的存在--");
	}



	public void update(int no,String name,int age,test.Student[] arr){//更新学员信息
		for(int i=0;i<arr.length;i++){
			if(this.exist(no,arr[i])){
				arr[i].setName(name);
				arr[i].setAge(age);
				System.out.println("---更新学生信息成功--");
				this.print(arr);
				return;
			}
		}
		System.out.println("没找到这个学生更新信息失败");
	}
	public void delete(int no,test.Student[] arr){
		for(int i=0;i<arr.length;i++){
			if(this.exist(no,arr[i])){
				arr[i]=null;
				this.print(arr);
				return;
			}
		}
		System.out.println("您所指定编号的学生没有存在");
	}
	public void input(int no,test.Student[] arr){//输入学生成绩的操作
		for(int i=0;i<arr.length;i++){
			if(this.exist(no, arr[i])){
				System.out.println("请输入"+arr[i].getName()+"Java的成绩");
				Scanner in=new Scanner(System.in);
				if(in.hasNextInt()){
					arr[i].setJava(in.nextInt());
				}
				System.out.println("请输入"+arr[i].getName()+"C的成绩");
				if(in.hasNextInt()){
					arr[i].setC(in.nextInt());
				}
				System.out.println("请输入"+arr[i].getName()+"SQL的成绩");
				if(in.hasNextInt()){
					arr[i].setSql(in.nextInt());
				}
				this.print(arr);
				break;
			}
		}
	}
	public void couSort(int num,test.Student[] arr){//根据指定的科目进行排序操作
		if(num==1){
			for(int i=0;i<arr.length-1;i++){
				for(int j=i+1;j<arr.length;j++){
					if(arr[i]!=null&&arr[j]!=null){
						if(arr[i].getJava()<arr[j].getJava()){
							test.Student t=arr[i];
							arr[i]=arr[j];
							arr[j]=t;
						}
					}
				}
			}
		}else if(num==2){
			for(int i=0;i<arr.length-1;i++){
				for(int j=i+1;j<arr.length;j++){
					if(arr[i]!=null&&arr[j]!=null){
						if(arr[i].getC()<arr[j].getC()){
							test.Student t=arr[i];
							arr[i]=arr[j];
							arr[j]=t;
						}
					}
				}
			}
		}else if(num==3){
			for(int i=0;i<arr.length-1;i++){
				for(int j=i+1;j<arr.length;j++){
					if(arr[i]!=null&&arr[j]!=null){
						if(arr[i].getSql()<arr[j].getSql()){
							test.Student t=arr[i];
							arr[i]=arr[j];
							arr[j]=t;
						}
					}
				}
			}
		}
		this.print(arr);
	}
	public void sumSort(test.Student[] arr){//根据总分进行排序
		for(int i=0;i<arr.length-1;i++){
			for(int j=i+1;j<arr.length;j++){
				if(arr[i]!=null&&arr[j]!=null){
					if(arr[i].getSum()<arr[j].getSum()){
						test.Student t=arr[i];
						arr[i]=arr[j];
						arr[j]=t;
					}
				}
			}
		}
		this.print(arr);
	}

}





